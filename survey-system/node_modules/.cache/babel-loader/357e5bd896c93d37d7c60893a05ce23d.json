{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Survey System\\\\survey-system\\\\src\\\\components\\\\Categories\\\\Categories.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport categories from '../Data/PetsCategories';\nimport { PetsCard } from \"../PetsCards/PetsCards\";\nimport dogQuestions from \"../Data/Questions.json\";\nimport { Test1 } from \"../Tests/Test1\";\nimport Elements from \"../Data/QuestionsAnswers.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SurveyCategories = props => {\n  _s();\n\n  const [getRedirectQuestions, setRedirectQuestions] = useState(false);\n\n  const onCategoryClickHandler = (e, id) => {\n    alert(\"Category Clicked\" + id);\n\n    switch (id) {\n      case 2:\n        setRedirectQuestions(true);\n        console.log(dogQuestions);\n        break;\n\n      case 1: //cat questions\n\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: getRedirectQuestions ? /*#__PURE__*/_jsxDEV(Test1, {\n      questions: Elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Choose a survey to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row flex-wrap justify-center mt-16\",\n        children: categories && categories.map((element, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => onCategoryClickHandler(e, element.Id),\n          children: /*#__PURE__*/_jsxDEV(PetsCard, {\n            imgSrc: element.ImgSrc,\n            imgAlt: element.ImgAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SurveyCategories, \"np2GZIbq5k+EhjlM48AU7oSnNm4=\");\n\n_c = SurveyCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"SurveyCategories\");","map":{"version":3,"sources":["C:/Development/Survey System/survey-system/src/components/Categories/Categories.tsx"],"names":["React","useState","Header","categories","PetsCard","dogQuestions","Test1","Elements","SurveyCategories","props","getRedirectQuestions","setRedirectQuestions","onCategoryClickHandler","e","id","alert","console","log","map","element","i","Id","ImgSrc","ImgAlt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAA+C,OAA/C;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,QAAP,MAAqB,+BAArB;;;AAQA,OAAO,MAAMC,gBAA4B,GAAIC,KAAD,IAAmB;AAAA;;AAC3D,QAAK,CAACC,oBAAD,EAAuBC,oBAAvB,IAA8CV,QAAQ,CAAU,KAAV,CAA3D;;AAEA,QAAMW,sBAAsB,GAAE,CAACC,CAAD,EAAQC,EAAR,KAAoB;AAC9CC,IAAAA,KAAK,CAAC,qBAAoBD,EAArB,CAAL;;AAEA,YAAOA,EAAP;AACI,WAAK,CAAL;AACIH,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AACA;;AACJ,WAAK,CAAL,CALJ,CAMI;;AANJ;AAUH,GAbD;;AAcA,sBACI;AAAA,cAEPK,oBAAoB,gBACV,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YADU,gBAGb;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEG;AAAK,QAAA,SAAS,EAAC,8CAAf;AAAA,kBACKJ,UAAU,IAAIA,UAAU,CAACe,GAAX,CAAe,CAACC,OAAD,EAAcC,CAAd,kBAC9B;AAAa,UAAA,OAAO,EAAGP,CAAD,IAAUD,sBAAsB,CAACC,CAAD,EAAIM,OAAO,CAACE,EAAZ,CAAtD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAEF,OAAO,CAACG,MAA1B;AAAkC,YAAA,MAAM,EAAEH,OAAO,CAACI;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF,WAAUH,CAAV;AAAA;AAAA;AAAA;AAAA,gBADe;AADnB;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AALA,mBADJ;AAmBH,CApCM;;GAAMZ,gB;;KAAAA,gB","sourcesContent":["import React, { FC, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Header } from \"../Header/Header\";\r\nimport categories from '../Data/PetsCategories';\r\nimport { PetsCard } from \"../PetsCards/PetsCards\";\r\nimport dogQuestions from \"../Data/Questions.json\";\r\nimport { Test1 } from \"../Tests/Test1\";\r\nimport ExampleList from \"../Data/Example.json\";\r\nimport Elements from \"../Data/QuestionsAnswers.json\";\r\n\r\n\r\nexport interface IProps {\r\n   \r\n}\r\n\r\n\r\nexport const SurveyCategories: FC<IProps> = (props: IProps) => {   \r\n    const[getRedirectQuestions, setRedirectQuestions]= useState<boolean>(false);\r\n    \r\n    const onCategoryClickHandler =(e:any, id:number)=>{\r\n        alert(\"Category Clicked\"+ id);\r\n\r\n        switch(id){\r\n            case 2:\r\n                setRedirectQuestions(true);\r\n                console.log(dogQuestions);\r\n                break;\r\n            case 1:    \r\n            //cat questions\r\n        }\r\n        \r\n\r\n    } \r\n    return (\r\n        <>\r\n\r\n{getRedirectQuestions\r\n        ?  <Test1 questions={Elements}/>\r\n        : \r\n        <div>\r\n        <Header>Choose a survey to get started</Header>\r\n           <div className=\"flex flex-row flex-wrap justify-center mt-16\">\r\n               {categories && categories.map((element:any, i:any)=>\r\n               <div key={i} onClick={(e:any)=> onCategoryClickHandler(e, element.Id)}>\r\n                 <PetsCard imgSrc={element.ImgSrc} imgAlt={element.ImgAlt} ></PetsCard>\r\n               </div>\r\n             )}\r\n           </div>\r\n        </div>\r\n      }\t\t  \r\n         </>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}