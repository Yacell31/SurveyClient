{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  config.baseURL = 'https://localhost:44354/api';\n\n  if (config.method === \"patch\") {\n    config.headers[\"Content-Type\"] = \"application/json-patch+json\";\n  } else {\n    config.headers[\"Content-Type\"] = \"application/json\";\n    config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n  }\n\n  console.log(config);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(null, error => {\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"sources":["C:/Development/Survey System/survey-system/src/services/config/axiosConfig.js"],"names":["axios","interceptors","request","use","config","baseURL","method","headers","console","log","error","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACEC,MAAM,IAAI;AACRA,EAAAA,MAAM,CAACC,OAAP,GAAiB,6BAAjB;;AAEA,MAAID,MAAM,CAACE,MAAP,KAAkB,OAAtB,EAA+B;AAC3BF,IAAAA,MAAM,CAACG,OAAP,CAAe,cAAf,IAAiC,6BAAjC;AACD,GAFH,MAES;AACLH,IAAAA,MAAM,CAACG,OAAP,CAAe,cAAf,IAAiC,kBAAjC;AACAH,IAAAA,MAAM,CAACG,OAAP,CAAe,6BAAf,IAAgD,GAAhD;AACD;;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,SAAOA,MAAP;AACD,CAZH,EAaEM,KAAK,IAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAfH;AAkBAV,KAAK,CAACC,YAAN,CAAmBY,QAAnB,CAA4BV,GAA5B,CAAgC,IAAhC,EAAsCO,KAAK,IAAI;AAC7C,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAFD;AAIA,eAAeV,KAAf","sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    config.baseURL = 'https://localhost:44354/api';\r\n    \r\n    if (config.method === \"patch\") {\r\n        config.headers[\"Content-Type\"] = \"application/json-patch+json\";\r\n      } else {\r\n        config.headers[\"Content-Type\"] = \"application/json\";\r\n        config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      }\r\n    console.log(config);  \r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default axios;\r\n"]},"metadata":{},"sourceType":"module"}