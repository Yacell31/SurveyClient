{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Survey System\\\\survey-system\\\\src\\\\components\\\\AnswerOptions\\\\AnswerLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { AnswerOption } from \"./AnswerOption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AnswerLayout = props => {\n  _s();\n\n  useEffect(() => {\n    console.log(props.answers);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-50 dark:bg-gray-800 shadow-lg dark:shadow-dark rounded-2xl min-w-80 w-148 items-end\\r \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-6 pb-2\",\n      children: props.answers && props.answers.map(answer => /*#__PURE__*/_jsxDEV(AnswerOption, {\n        answer: answer,\n        onClick: props.onClick,\n        onTypeTextReponseValue: (e, elementId) => props.onTypeTextReponseValue(e, elementId)\n      }, answer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      name: \"nextQuestion\",\n      value: \"Next Question\",\n      className: \"group relative w-1/2 place-self-end \\r py-2 px-4 mb-4 border border-transparent text-sm font-medium\\r rounded-md text-white bg-amber-600 hover:bg-amber-700\\r focus:outline-none focus:ring-2 focus:ring-offset-2\\r focus:ring-amber-500\",\n      onClick: props.onNextQuestionClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnswerLayout, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AnswerLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerLayout\");","map":{"version":3,"sources":["C:/Development/Survey System/survey-system/src/components/AnswerOptions/AnswerLayout.tsx"],"names":["React","useEffect","AnswerOption","AnswerLayout","props","console","log","answers","map","answer","onClick","e","elementId","onTypeTextReponseValue","id","onNextQuestionClickHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAWA,OAAO,MAAMC,YAAwB,GAAIC,KAAD,IAAmB;AAAA;;AAEvDH,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AAGC,GAJI,EAIF,EAJE,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gGAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACMH,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAmBC,MAAD,iBACjC,QAAC,YAAD;AAEI,QAAA,MAAM,EAAEA,MAFZ;AAGI,QAAA,OAAO,EAAEL,KAAK,CAACM,OAHnB;AAII,QAAA,sBAAsB,EAAE,CAACC,CAAD,EAAQC,SAAR,KAA4BR,KAAK,CAACS,sBAAN,CAA6BF,CAA7B,EAAgCC,SAAhC;AAJxD,SACSH,MAAM,CAACK,EADhB;AAAA;AAAA;AAAA;AAAA,cADe;AADvB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,cAFT;AAGI,MAAA,KAAK,EAAC,eAHV;AAII,MAAA,SAAS,EAAC,0OAJd;AASI,MAAA,OAAO,EAAEV,KAAK,CAACW;AATnB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CApCM;;GAAMZ,Y;;KAAAA,Y","sourcesContent":["import React, { FC, useState, useEffect } from \"react\";\r\nimport { AnswerOption } from \"./AnswerOption\";\r\nimport { ArrowCircleRightIcon } from \"@heroicons/react/solid\";\r\n\r\nexport interface IProps {\r\n   answers:any;\r\n   onClick:any;\r\n   onNextQuestionClickHandler:any;\r\n   onTypeTextReponseValue:any;\r\n}\r\n\r\n\r\nexport const AnswerLayout: FC<IProps> = (props: IProps) => {    \r\n     \r\n    useEffect(() => {\r\n        console.log(props.answers);\r\n       \r\n          \r\n        }, [])\r\n\r\n    return (\r\n        <div className=\"bg-gray-50 dark:bg-gray-800 shadow-lg dark:shadow-dark rounded-2xl min-w-80 w-148 items-end\r\n        \">\r\n            <div className=\"pt-6 pb-2\">\r\n                 {props.answers&&  props.answers.map((answer:any) => \r\n                    <AnswerOption\r\n                        key={answer.id}\r\n                        answer={answer}\r\n                        onClick={props.onClick}\r\n                        onTypeTextReponseValue={(e:any, elementId:number)=> props.onTypeTextReponseValue(e, elementId)}\r\n                    />\r\n                )}\r\n            </div>\r\n            <input\r\n                type=\"button\"\r\n                name=\"nextQuestion\"\r\n                value=\"Next Question\"\r\n                className=\"group relative w-1/2 place-self-end \r\n                py-2 px-4 mb-4 border border-transparent text-sm font-medium\r\n                rounded-md text-white bg-amber-600 hover:bg-amber-700\r\n                focus:outline-none focus:ring-2 focus:ring-offset-2\r\n                focus:ring-amber-500\" \r\n                onClick={props.onNextQuestionClickHandler}\r\n                >\r\n               \r\n                </input>\r\n            </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}