{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Survey System\\\\survey-system\\\\src\\\\components\\\\Tests\\\\Test1.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Test1 = props => {\n  const listItems = props.questions.DogQuestionList.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: question\n  }, question.toString(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"item.name\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n_c = Test1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test1\");","map":{"version":3,"sources":["C:/Development/Survey System/survey-system/src/components/Tests/Test1.tsx"],"names":["React","Test1","props","listItems","questions","DogQuestionList","map","question","toString","items","item","i"],"mappings":";AAAA,OAAOA,KAAP,MAA+C,OAA/C;;AAQA,OAAO,MAAMC,KAAiB,GAAIC,KAAD,IAAmB;AAEhD,QAAMC,SAAS,GAAGD,KAAK,CAACE,SAAN,CAAgBC,eAAhB,CAAgCC,GAAhC,CAAqCC,QAAD,iBACtD;AAAA,cACGA;AADH,KAASA,QAAQ,CAACC,QAAT,EAAT;AAAA;AAAA;AAAA;AAAA,UADkB,CAAlB;AAMA,sBACQ;AAAA,cACCN,KAAK,CAACO,KAAN,CAAYH,GAAZ,CAAgB,CAACI,IAAD,EAAMC,CAAN,kBACf;AAAA;AAAA,OAASA,CAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADD;AAAA;AAAA;AAAA;AAAA,UADR;AAQH,CAhBM;KAAMV,K","sourcesContent":["import React, { FC, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface IProps {\r\n   questions:any;\r\n}\r\n\r\n\r\nexport const Test1: FC<IProps> = (props: IProps) => {    \r\n\r\n    const listItems = props.questions.DogQuestionList.map((question:any) =>\r\n    <li key={question.toString()}>\r\n      {question}\r\n    </li>\r\n  );\r\n\r\n    return (\r\n            <ul>\r\n            {props.items.map((item,i) => \r\n              <li key={i}>item.name</li>\r\n            )}\r\n            </ul>\r\n          \r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}